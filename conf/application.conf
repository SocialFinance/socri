# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="socri is dank tomfoolery, yo"

# The application languages
# ~~~~~
application.langs="en"

# config.GlobalConfigConfig object class
# ~~~~~
# Define the config.GlobalConfigConfig object class for this application.
# Default to config.GlobalConfigConfig in the root package.
# application.global=config.GlobalConfigConfig

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
#db.default.driver=org.h2.Driver
#db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://localhost/socri?useSSL=false"
db.default.user="socri"
db.default.pass="socri"
db.default.dialect=org.hibernate.dialect.MySQLDialect
# Only use the following if you want help generating table definitions
db.default.ddl.strategy=create-drop

# Ensure a nice test user is always available
socri.debug.user.create=true
socri.debug.user.name="foo"
socri.debug.user.password="bar"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
#evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
#ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# LocalContainerEntityManagerFactoryBean will scan here (DataConfig)
scan.data.packages="models"


# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=config.GlobalConfig
